version: "3"
services:
  solr:
    image: solr:latest
    container_name: recommendation_system_solr
    ports:
      - "8983:8983"
    volumes:
      - ./solr_config:/opt/solr/server/solr/configsets/my_custom_config
      - ./data:/var/solr
    command:
      - solr-precreate
      - restaurant_service_restaurants
      - /opt/solr/server/solr/configsets/my_custom_config

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CREATE_TOPICS: "errorLog:1:1, infoLog:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  user-db:
    image: postgres:latest
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U atakan -d user_service_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: user_service_db
      POSTGRES_USER: atakan
      POSTGRES_PASSWORD: 1926

  logger-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: logging_service_db
      POSTGRES_USER: atakan
      POSTGRES_PASSWORD: 1926

  user-service:
    build: ./user-service
    ports:
      - "8080:8080"
    depends_on:
      - user-db
      - kafka

  restaurant-service:
    build: ./restaurant-service
    ports:
      - "8081:8081"
    depends_on:
      - solr
      - kafka

  logging-service:
    build: ./logging-service
    ports:
      - "8082:8082"
    depends_on:
      - logger-db
      - kafka
